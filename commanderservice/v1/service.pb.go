// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: commander/api/commanderservice/v1/service.proto

package commanderservice

import (
	context "context"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RenderStatus_Status int32

const (
	RenderStatus_UNKNOWN RenderStatus_Status = 0
	RenderStatus_PENDING RenderStatus_Status = 1
	RenderStatus_RUNNING RenderStatus_Status = 2
	RenderStatus_SUCCESS RenderStatus_Status = 3
	RenderStatus_FAILED  RenderStatus_Status = 4
)

// Enum value maps for RenderStatus_Status.
var (
	RenderStatus_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "SUCCESS",
		4: "FAILED",
	}
	RenderStatus_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"PENDING": 1,
		"RUNNING": 2,
		"SUCCESS": 3,
		"FAILED":  4,
	}
)

func (x RenderStatus_Status) Enum() *RenderStatus_Status {
	p := new(RenderStatus_Status)
	*p = x
	return p
}

func (x RenderStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RenderStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_commander_api_commanderservice_v1_service_proto_enumTypes[0].Descriptor()
}

func (RenderStatus_Status) Type() protoreflect.EnumType {
	return &file_commander_api_commanderservice_v1_service_proto_enumTypes[0]
}

func (x RenderStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RenderStatus_Status.Descriptor instead.
func (RenderStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{0, 0}
}

type RenderStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status RenderStatus_Status `protobuf:"varint,2,opt,name=status,proto3,enum=flowshot.commander.api.commanderservice.v1.RenderStatus_Status" json:"status,omitempty"`
	File   string              `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *RenderStatus) Reset() {
	*x = RenderStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStatus) ProtoMessage() {}

func (x *RenderStatus) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStatus.ProtoReflect.Descriptor instead.
func (*RenderStatus) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *RenderStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RenderStatus) GetStatus() RenderStatus_Status {
	if x != nil {
		return x.Status
	}
	return RenderStatus_UNKNOWN
}

func (x *RenderStatus) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

type CreateBlenderFarmWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File       string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	StartFrame int32  `protobuf:"varint,2,opt,name=start_frame,json=startFrame,proto3" json:"start_frame,omitempty"`
	EndFrame   int32  `protobuf:"varint,3,opt,name=end_frame,json=endFrame,proto3" json:"end_frame,omitempty"`
	BatchSize  int32  `protobuf:"varint,4,opt,name=BatchSize,proto3" json:"BatchSize,omitempty"`
}

func (x *CreateBlenderFarmWorkflowRequest) Reset() {
	*x = CreateBlenderFarmWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBlenderFarmWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlenderFarmWorkflowRequest) ProtoMessage() {}

func (x *CreateBlenderFarmWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlenderFarmWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateBlenderFarmWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBlenderFarmWorkflowRequest) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *CreateBlenderFarmWorkflowRequest) GetStartFrame() int32 {
	if x != nil {
		return x.StartFrame
	}
	return 0
}

func (x *CreateBlenderFarmWorkflowRequest) GetEndFrame() int32 {
	if x != nil {
		return x.EndFrame
	}
	return 0
}

func (x *CreateBlenderFarmWorkflowRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type CreateBlenderFarmWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateBlenderFarmWorkflowResponse) Reset() {
	*x = CreateBlenderFarmWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBlenderFarmWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlenderFarmWorkflowResponse) ProtoMessage() {}

func (x *CreateBlenderFarmWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlenderFarmWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CreateBlenderFarmWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBlenderFarmWorkflowResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBlenderFarmWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBlenderFarmWorkflowRequest) Reset() {
	*x = GetBlenderFarmWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlenderFarmWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlenderFarmWorkflowRequest) ProtoMessage() {}

func (x *GetBlenderFarmWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlenderFarmWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetBlenderFarmWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetBlenderFarmWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBlenderFarmWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RenderStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetBlenderFarmWorkflowResponse) Reset() {
	*x = GetBlenderFarmWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlenderFarmWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlenderFarmWorkflowResponse) ProtoMessage() {}

func (x *GetBlenderFarmWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlenderFarmWorkflowResponse.ProtoReflect.Descriptor instead.
func (*GetBlenderFarmWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetBlenderFarmWorkflowResponse) GetStatus() *RenderStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListBlenderFarmWorkflowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBlenderFarmWorkflowsRequest) Reset() {
	*x = ListBlenderFarmWorkflowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlenderFarmWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlenderFarmWorkflowsRequest) ProtoMessage() {}

func (x *ListBlenderFarmWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlenderFarmWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListBlenderFarmWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{5}
}

type ListBlenderFarmWorkflowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []*RenderStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *ListBlenderFarmWorkflowsResponse) Reset() {
	*x = ListBlenderFarmWorkflowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlenderFarmWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlenderFarmWorkflowsResponse) ProtoMessage() {}

func (x *ListBlenderFarmWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlenderFarmWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListBlenderFarmWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListBlenderFarmWorkflowsResponse) GetStatus() []*RenderStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type CancelBlenderFarmWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CancelBlenderFarmWorkflowRequest) Reset() {
	*x = CancelBlenderFarmWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelBlenderFarmWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBlenderFarmWorkflowRequest) ProtoMessage() {}

func (x *CancelBlenderFarmWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBlenderFarmWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CancelBlenderFarmWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *CancelBlenderFarmWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CancelBlenderFarmWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelBlenderFarmWorkflowResponse) Reset() {
	*x = CancelBlenderFarmWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelBlenderFarmWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBlenderFarmWorkflowResponse) ProtoMessage() {}

func (x *CancelBlenderFarmWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commander_api_commanderservice_v1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBlenderFarmWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CancelBlenderFarmWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_commander_api_commanderservice_v1_service_proto_rawDescGZIP(), []int{8}
}

var File_commander_api_commanderservice_v1_service_proto protoreflect.FileDescriptor

var file_commander_api_commanderservice_v1_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x2a, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x57, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x22, 0x92, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x33, 0x0a, 0x21, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x2f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61,
	0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x72, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46,
	0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x32,
	0x0a, 0x20, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46,
	0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x6c, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfa, 0x05, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xba, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61,
	0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x4c, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x68, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb1, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x12, 0x49, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4a, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb7, 0x01,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72,
	0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x4b, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68,
	0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xba, 0x01, 0x0a, 0x19, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x4c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x46, 0x61, 0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61,
	0x72, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x68, 0x6f, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commander_api_commanderservice_v1_service_proto_rawDescOnce sync.Once
	file_commander_api_commanderservice_v1_service_proto_rawDescData = file_commander_api_commanderservice_v1_service_proto_rawDesc
)

func file_commander_api_commanderservice_v1_service_proto_rawDescGZIP() []byte {
	file_commander_api_commanderservice_v1_service_proto_rawDescOnce.Do(func() {
		file_commander_api_commanderservice_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_commander_api_commanderservice_v1_service_proto_rawDescData)
	})
	return file_commander_api_commanderservice_v1_service_proto_rawDescData
}

var file_commander_api_commanderservice_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_commander_api_commanderservice_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_commander_api_commanderservice_v1_service_proto_goTypes = []interface{}{
	(RenderStatus_Status)(0),                  // 0: flowshot.commander.api.commanderservice.v1.RenderStatus.Status
	(*RenderStatus)(nil),                      // 1: flowshot.commander.api.commanderservice.v1.RenderStatus
	(*CreateBlenderFarmWorkflowRequest)(nil),  // 2: flowshot.commander.api.commanderservice.v1.CreateBlenderFarmWorkflowRequest
	(*CreateBlenderFarmWorkflowResponse)(nil), // 3: flowshot.commander.api.commanderservice.v1.CreateBlenderFarmWorkflowResponse
	(*GetBlenderFarmWorkflowRequest)(nil),     // 4: flowshot.commander.api.commanderservice.v1.GetBlenderFarmWorkflowRequest
	(*GetBlenderFarmWorkflowResponse)(nil),    // 5: flowshot.commander.api.commanderservice.v1.GetBlenderFarmWorkflowResponse
	(*ListBlenderFarmWorkflowsRequest)(nil),   // 6: flowshot.commander.api.commanderservice.v1.ListBlenderFarmWorkflowsRequest
	(*ListBlenderFarmWorkflowsResponse)(nil),  // 7: flowshot.commander.api.commanderservice.v1.ListBlenderFarmWorkflowsResponse
	(*CancelBlenderFarmWorkflowRequest)(nil),  // 8: flowshot.commander.api.commanderservice.v1.CancelBlenderFarmWorkflowRequest
	(*CancelBlenderFarmWorkflowResponse)(nil), // 9: flowshot.commander.api.commanderservice.v1.CancelBlenderFarmWorkflowResponse
}
var file_commander_api_commanderservice_v1_service_proto_depIdxs = []int32{
	0, // 0: flowshot.commander.api.commanderservice.v1.RenderStatus.status:type_name -> flowshot.commander.api.commanderservice.v1.RenderStatus.Status
	1, // 1: flowshot.commander.api.commanderservice.v1.GetBlenderFarmWorkflowResponse.status:type_name -> flowshot.commander.api.commanderservice.v1.RenderStatus
	1, // 2: flowshot.commander.api.commanderservice.v1.ListBlenderFarmWorkflowsResponse.status:type_name -> flowshot.commander.api.commanderservice.v1.RenderStatus
	2, // 3: flowshot.commander.api.commanderservice.v1.CommanderService.CreateBlenderFarmWorkflow:input_type -> flowshot.commander.api.commanderservice.v1.CreateBlenderFarmWorkflowRequest
	4, // 4: flowshot.commander.api.commanderservice.v1.CommanderService.GetBlenderFarmWorkflow:input_type -> flowshot.commander.api.commanderservice.v1.GetBlenderFarmWorkflowRequest
	6, // 5: flowshot.commander.api.commanderservice.v1.CommanderService.ListBlenderFarmWorkflows:input_type -> flowshot.commander.api.commanderservice.v1.ListBlenderFarmWorkflowsRequest
	8, // 6: flowshot.commander.api.commanderservice.v1.CommanderService.CancelBlenderFarmWorkflow:input_type -> flowshot.commander.api.commanderservice.v1.CancelBlenderFarmWorkflowRequest
	3, // 7: flowshot.commander.api.commanderservice.v1.CommanderService.CreateBlenderFarmWorkflow:output_type -> flowshot.commander.api.commanderservice.v1.CreateBlenderFarmWorkflowResponse
	5, // 8: flowshot.commander.api.commanderservice.v1.CommanderService.GetBlenderFarmWorkflow:output_type -> flowshot.commander.api.commanderservice.v1.GetBlenderFarmWorkflowResponse
	7, // 9: flowshot.commander.api.commanderservice.v1.CommanderService.ListBlenderFarmWorkflows:output_type -> flowshot.commander.api.commanderservice.v1.ListBlenderFarmWorkflowsResponse
	9, // 10: flowshot.commander.api.commanderservice.v1.CommanderService.CancelBlenderFarmWorkflow:output_type -> flowshot.commander.api.commanderservice.v1.CancelBlenderFarmWorkflowResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_commander_api_commanderservice_v1_service_proto_init() }
func file_commander_api_commanderservice_v1_service_proto_init() {
	if File_commander_api_commanderservice_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commander_api_commanderservice_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commander_api_commanderservice_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBlenderFarmWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commander_api_commanderservice_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBlenderFarmWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commander_api_commanderservice_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlenderFarmWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commander_api_commanderservice_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlenderFarmWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commander_api_commanderservice_v1_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlenderFarmWorkflowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commander_api_commanderservice_v1_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlenderFarmWorkflowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commander_api_commanderservice_v1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelBlenderFarmWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commander_api_commanderservice_v1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelBlenderFarmWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commander_api_commanderservice_v1_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commander_api_commanderservice_v1_service_proto_goTypes,
		DependencyIndexes: file_commander_api_commanderservice_v1_service_proto_depIdxs,
		EnumInfos:         file_commander_api_commanderservice_v1_service_proto_enumTypes,
		MessageInfos:      file_commander_api_commanderservice_v1_service_proto_msgTypes,
	}.Build()
	File_commander_api_commanderservice_v1_service_proto = out.File
	file_commander_api_commanderservice_v1_service_proto_rawDesc = nil
	file_commander_api_commanderservice_v1_service_proto_goTypes = nil
	file_commander_api_commanderservice_v1_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CommanderServiceClient is the client API for CommanderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommanderServiceClient interface {
	// CreateBlenderFarmWorkflow creates a blender farm workflow.
	CreateBlenderFarmWorkflow(ctx context.Context, in *CreateBlenderFarmWorkflowRequest, opts ...grpc.CallOption) (*CreateBlenderFarmWorkflowResponse, error)
	// GetBlenderFarmWorkflow gets a blender farm workflow.
	GetBlenderFarmWorkflow(ctx context.Context, in *GetBlenderFarmWorkflowRequest, opts ...grpc.CallOption) (*GetBlenderFarmWorkflowResponse, error)
	// ListBlenderFarmWorkflows lists all blender farm workflows.
	ListBlenderFarmWorkflows(ctx context.Context, in *ListBlenderFarmWorkflowsRequest, opts ...grpc.CallOption) (*ListBlenderFarmWorkflowsResponse, error)
	// CancelBlenderFarmWorkflow cancels a blender farm workflow.
	CancelBlenderFarmWorkflow(ctx context.Context, in *CancelBlenderFarmWorkflowRequest, opts ...grpc.CallOption) (*CancelBlenderFarmWorkflowResponse, error)
}

type commanderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCommanderServiceClient(cc grpc.ClientConnInterface) CommanderServiceClient {
	return &commanderServiceClient{cc}
}

func (c *commanderServiceClient) CreateBlenderFarmWorkflow(ctx context.Context, in *CreateBlenderFarmWorkflowRequest, opts ...grpc.CallOption) (*CreateBlenderFarmWorkflowResponse, error) {
	out := new(CreateBlenderFarmWorkflowResponse)
	err := c.cc.Invoke(ctx, "/flowshot.commander.api.commanderservice.v1.CommanderService/CreateBlenderFarmWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commanderServiceClient) GetBlenderFarmWorkflow(ctx context.Context, in *GetBlenderFarmWorkflowRequest, opts ...grpc.CallOption) (*GetBlenderFarmWorkflowResponse, error) {
	out := new(GetBlenderFarmWorkflowResponse)
	err := c.cc.Invoke(ctx, "/flowshot.commander.api.commanderservice.v1.CommanderService/GetBlenderFarmWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commanderServiceClient) ListBlenderFarmWorkflows(ctx context.Context, in *ListBlenderFarmWorkflowsRequest, opts ...grpc.CallOption) (*ListBlenderFarmWorkflowsResponse, error) {
	out := new(ListBlenderFarmWorkflowsResponse)
	err := c.cc.Invoke(ctx, "/flowshot.commander.api.commanderservice.v1.CommanderService/ListBlenderFarmWorkflows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commanderServiceClient) CancelBlenderFarmWorkflow(ctx context.Context, in *CancelBlenderFarmWorkflowRequest, opts ...grpc.CallOption) (*CancelBlenderFarmWorkflowResponse, error) {
	out := new(CancelBlenderFarmWorkflowResponse)
	err := c.cc.Invoke(ctx, "/flowshot.commander.api.commanderservice.v1.CommanderService/CancelBlenderFarmWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommanderServiceServer is the server API for CommanderService service.
type CommanderServiceServer interface {
	// CreateBlenderFarmWorkflow creates a blender farm workflow.
	CreateBlenderFarmWorkflow(context.Context, *CreateBlenderFarmWorkflowRequest) (*CreateBlenderFarmWorkflowResponse, error)
	// GetBlenderFarmWorkflow gets a blender farm workflow.
	GetBlenderFarmWorkflow(context.Context, *GetBlenderFarmWorkflowRequest) (*GetBlenderFarmWorkflowResponse, error)
	// ListBlenderFarmWorkflows lists all blender farm workflows.
	ListBlenderFarmWorkflows(context.Context, *ListBlenderFarmWorkflowsRequest) (*ListBlenderFarmWorkflowsResponse, error)
	// CancelBlenderFarmWorkflow cancels a blender farm workflow.
	CancelBlenderFarmWorkflow(context.Context, *CancelBlenderFarmWorkflowRequest) (*CancelBlenderFarmWorkflowResponse, error)
}

// UnimplementedCommanderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCommanderServiceServer struct {
}

func (*UnimplementedCommanderServiceServer) CreateBlenderFarmWorkflow(context.Context, *CreateBlenderFarmWorkflowRequest) (*CreateBlenderFarmWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBlenderFarmWorkflow not implemented")
}
func (*UnimplementedCommanderServiceServer) GetBlenderFarmWorkflow(context.Context, *GetBlenderFarmWorkflowRequest) (*GetBlenderFarmWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlenderFarmWorkflow not implemented")
}
func (*UnimplementedCommanderServiceServer) ListBlenderFarmWorkflows(context.Context, *ListBlenderFarmWorkflowsRequest) (*ListBlenderFarmWorkflowsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBlenderFarmWorkflows not implemented")
}
func (*UnimplementedCommanderServiceServer) CancelBlenderFarmWorkflow(context.Context, *CancelBlenderFarmWorkflowRequest) (*CancelBlenderFarmWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelBlenderFarmWorkflow not implemented")
}

func RegisterCommanderServiceServer(s *grpc.Server, srv CommanderServiceServer) {
	s.RegisterService(&_CommanderService_serviceDesc, srv)
}

func _CommanderService_CreateBlenderFarmWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBlenderFarmWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServiceServer).CreateBlenderFarmWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flowshot.commander.api.commanderservice.v1.CommanderService/CreateBlenderFarmWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServiceServer).CreateBlenderFarmWorkflow(ctx, req.(*CreateBlenderFarmWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommanderService_GetBlenderFarmWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlenderFarmWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServiceServer).GetBlenderFarmWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flowshot.commander.api.commanderservice.v1.CommanderService/GetBlenderFarmWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServiceServer).GetBlenderFarmWorkflow(ctx, req.(*GetBlenderFarmWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommanderService_ListBlenderFarmWorkflows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBlenderFarmWorkflowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServiceServer).ListBlenderFarmWorkflows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flowshot.commander.api.commanderservice.v1.CommanderService/ListBlenderFarmWorkflows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServiceServer).ListBlenderFarmWorkflows(ctx, req.(*ListBlenderFarmWorkflowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommanderService_CancelBlenderFarmWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelBlenderFarmWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServiceServer).CancelBlenderFarmWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flowshot.commander.api.commanderservice.v1.CommanderService/CancelBlenderFarmWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServiceServer).CancelBlenderFarmWorkflow(ctx, req.(*CancelBlenderFarmWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommanderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flowshot.commander.api.commanderservice.v1.CommanderService",
	HandlerType: (*CommanderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBlenderFarmWorkflow",
			Handler:    _CommanderService_CreateBlenderFarmWorkflow_Handler,
		},
		{
			MethodName: "GetBlenderFarmWorkflow",
			Handler:    _CommanderService_GetBlenderFarmWorkflow_Handler,
		},
		{
			MethodName: "ListBlenderFarmWorkflows",
			Handler:    _CommanderService_ListBlenderFarmWorkflows_Handler,
		},
		{
			MethodName: "CancelBlenderFarmWorkflow",
			Handler:    _CommanderService_CancelBlenderFarmWorkflow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "commander/api/commanderservice/v1/service.proto",
}
